// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package rssfeedrome.actions;

import java.io.InputStreamReader;
import java.net.URL;
import java.util.List;
import com.mendix.core.Core;
import com.mendix.core.objectmanagement.member.MendixObjectReferenceSet;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import com.rometools.rome.feed.synd.SyndCategory;
import com.rometools.rome.feed.synd.SyndContent;
import com.rometools.rome.feed.synd.SyndEntry;
import com.rometools.rome.feed.synd.SyndFeed;
import com.rometools.rome.io.SyndFeedInput;
import rssfeedrome.proxies.Feed;
import rssfeedrome.proxies.Entry;
import rssfeedrome.proxies.Content;
import rssfeedrome.proxies.Category;

public class GetFeed extends CustomJavaAction<IMendixObject>
{
	private java.lang.String Url;
	private java.lang.Long Limit;

	public GetFeed(IContext context, java.lang.String Url, java.lang.Long Limit)
	{
		super(context);
		this.Url = Url;
		this.Limit = Limit;
	}

	@java.lang.Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
			
		URL feedUrl = new URL(this.Url);
		SyndFeedInput input = new SyndFeedInput();
		SyndFeed feed = input.build(new InputStreamReader(feedUrl.openStream()));
		
		
		Feed mxFeed = new Feed(context());	
		
		mxFeed.setAuthor( feed.getAuthor());
		mxFeed.setDescription(feed.getDescription());
		mxFeed.setTitle(feed.getTitle());
		mxFeed.setLanguage(feed.getLanguage());
		
		List<SyndEntry> entries = feed.getEntries();
		
		if (Limit == null) {
			entries.forEach(entry -> {
				processEntries(mxFeed, entry);
			});
			
		}
		else {
			entries.stream().limit(this.Limit).forEach(entry -> {
				processEntries(mxFeed, entry);
			});
		}
		
		return mxFeed.getMendixObject();
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "GetFeed";
	}

	// BEGIN EXTRA CODE
	private void processEntries(Feed mxFeed, SyndEntry entry) { 
		Entry mxEntry = new Entry(this.getContext());
		mxEntry.setAuthor(entry.getAuthor());
		mxEntry.setPublishedDate(entry.getPublishedDate());
		mxEntry.setLink(entry.getLink());
		mxEntry.setTitle(entry.getTitle());
		
				
		List<SyndContent> contents = entry.getContents();
		contents.forEach(content -> {
			
			Content mxContent = new Content(this.getContext());
			mxContent.setContentType(content.getType());
			mxContent.setValue(content.getValue());
			addObjectToReferenceSet(Entry.MemberNames.Entry_Content.toString(),mxEntry.getMendixObject(),mxContent.getMendixObject());
			
		});
	
		SyndContent description = entry.getDescription();
		Content mxDescription = new Content(this.getContext());
		mxDescription.setContentType(description.getType());
		mxDescription.setValue(description.getValue());
		mxEntry.setEntry_Description(mxDescription);
		
		List<SyndCategory> categories = entry.getCategories();
		categories.forEach(category -> {
			Core.getLogger("RSS").info(category.getName());
			Category mxCategory = new Category(this.getContext());
			mxCategory.setLabel(category.getLabel());
			mxCategory.setName(category.getName());
			mxCategory.setTaxonomyURI(category.getTaxonomyUri());
			addObjectToReferenceSet(Entry.MemberNames.Entry_Category.toString(), mxEntry.getMendixObject(), mxCategory.getMendixObject());
			
		});
		
		
		addObjectToReferenceSet(Feed.MemberNames.Feed_Entry.toString(),mxFeed.getMendixObject(), mxEntry.getMendixObject());

	}
	
	private void addObjectToReferenceSet(String referenceSetMember,IMendixObject mxObject, IMendixObject mxReferenceObject) {
		MendixObjectReferenceSet referenceSet = (MendixObjectReferenceSet) mxObject.getMember(getContext(), referenceSetMember);
		referenceSet.addValue(getContext(), mxReferenceObject.getId());
		
	}
	
	// END EXTRA CODE
}
